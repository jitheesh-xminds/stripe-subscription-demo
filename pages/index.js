import { Box, Button, Input, Link } from '@chakra-ui/react'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useState, useEffect } from "react"
import axios from 'axios'
import { iteratee, set } from 'lodash'


export default function Home({ stripeProduct }) {
  const [customerId, setCustomerId] = useState()
  const [customerData, setCustomerData] = useState()
  const [subscribtionId, setSubscriptionId] = useState()
  const [subscribtionData, setSubscriptionData] = useState([])
  const [stripeProductsList, setStripeProductsList] = useState(stripeProduct)
  const [portalSessions, setPortalSessions] = useState()
  const [subscriptionName, setSubscriptionName] = useState("")
  const [email, setEmail] = useState()
  const [phone, setPhone] = useState()
  const [name, setName] = useState()

  useEffect(() => {
    if (window) {
      setCustomerId(localStorage.getItem("customerId"))
      setSubscriptionId(localStorage.getItem("subscriptionId"))
    }
    // list all stripe product
    setStripeProductsList(stripeProduct)
  }, [])

  useEffect(() => {
    retrieveCustomer()
  }, [customerId])

  useEffect(() => {
    retrieveSubScription()
  }, [subscribtionId])

  useEffect(() => {
    if (subscribtionId && customerId) {
      retrieveCustomerPortalSession()
    }
  }, [subscribtionId], customerId)



  async function retrieveSubScription() {
    if (subscribtionId) {
      const data = await axios.post("/api/retrieve-subscription-by-id", {
        subscriptionId: subscribtionId
      })
      setSubscriptionData(data?.data)
      stripeProductsList.map((item, index) => {
        if (item?.id == data?.data?.data?.[0]?.plan?.product) {
          setSubscriptionName(item?.name)
        }
      })
    }
  }

  async function retrieveCustomerPortalSession() {
    const data = await axios.post("/api/create-customer-portal-session", {
      customerId: customerId
    })
    setPortalSessions(data?.data)
  }


  const retrieveCustomer = async () => {
    if (customerId) {
      const data = await axios.post("/api/retrieve_customer", {
        customerId: customerId
      })
      setCustomerData(data?.data)
    }
  }

  const createCustomer = async () => {
    const data = await axios.post("/api/create-customer", {
      name: name,
      email: email,
      phone: phone
    })

    localStorage.setItem("customerId", data?.data?.id)
    setCustomerData(data?.data)
    setCustomerId(data?.data?.id)
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>
        {
          customerId &&
          <>
            <h2>Your Current Plan :- <span>{subscribtionId ? subscriptionName : "Free"}</span></h2>
            <div>
              <h3>Cutomer Details</h3>
              <p>Your Name : <span>{customerData?.name}</span></p>
              <p>Your phone : <span>{customerData?.phone}</span></p>
              <p>Your Email : <span>{customerData?.email}</span></p>
            </div>
          </>
        }

        <div>
          {
            customerId
              ? <Link href={portalSessions ? portalSessions?.url : '/pricing/'} >
                <Button>{subscribtionId ? "Customer Portal" : "Subscribe to Next.js"}</Button>
              </Link>
              : <>
                <Box>
                  <Input placeholder="Name" onChange={(val) => setName(val.target.value)} />
                  <Input placeholder="Pho" onChange={(val) => setPhone(val.target.value)} />
                  <Input placeholder="Email Id" onChange={(val) => setEmail(val.target.value)} />
                  <Button onClick={() => { createCustomer() }}>Create Acount</Button>
                </Box>
              </>
          }
        </div>
      </main >

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div >
  )
}

export const getServerSideProps = async (context) => {
  try {
    const res = await fetch(
      `http://localhost:3000/api/list_products`,
      {
        body: JSON.stringify({}),
        headers: {
          'Content-Type': 'application/json',
        },
        method: 'POST'
      }

    );
    const data = await res.json()
    return {
      props:
      {
        stripeProduct: data?.data
      }
    }
  } catch (error) {
    console.log(error)
    return {
      notFound: true,
      props: {}
    }
  }
}
